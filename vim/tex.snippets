priority -50

extends texmath

global !p

def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]

	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	
	rows = int_val(rows)
	cols = int_val(cols)

	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	
	snip.buffer[snip.line] = ''
	
	final_str = old_spacing + "\\begin{tabular}{|" + "|".join(['$' + str(i + 1) for i in range(cols)]) + "|}\n"

	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])

		final_str += " \\\\\\\n"

	final_str += old_spacing + "\\end{tabular}\n$0"

	snip.expand_anon(final_str)

def add_row(snip):
	row_len = int(''.join(s for s in snip.buffer[snip.line] if s.isdigit()))
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]

	snip.buffer[snip.line] = ''
	
	final_str = old_spacing
	final_str += " & ".join(['$' + str(j + 1) for j in range(row_len)])
	final_str += " \\\\\\"

	snip.expand_anon(final_str)

endglobal

pre_expand "create_table(snip)"
snippet "gentbl(\d+)x(\d+)" "Generate table of *width* by *height*" r  
endsnippet

pre_expand "add_row(snip)"
snippet "tr(\d+)" "Add table row of dimension ..." r
endsnippet

snippet "beg(in)?" "begin{} / end{}" br
\begin{${1:something}}
	${0:${VISUAL}}
\end{$1}
endsnippet

snippet abs "abstract environment" b
\begin{abstract}
	$0 bla bla bla
\end{abstract}
endsnippet

snippet tab "tabular / array environment" b
\begin{${1:t}${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${2:c}}
$0${2/(?<=.)(c|l|r)|./(?1: & )/g}
\end{$1${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
	$0${5/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${2:htpb}]
	\centering
	\includegraphics[width=${3:0.8}\linewidth]{${4:name.ext}}
	\caption{${4/(\w+)\.\w+/\u$1/}$0}
	\label{fig:${4/(\w+)\.\w+/$1/}}
\end{figure}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet "des(c)?" "Description" br
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet i "Individual item" b
\item $0
endsnippet

snippet ib "Individual item with brackets" b
\item[$1] $0
endsnippet

snippet cha "Chapter" b
\chapter{${1:chapter name}} \label{cha:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet sec "Section" b
\section{${1:section name}} \label{sec:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet


snippet sub "Subsection" b
\subsection{${1:subsection name}} \label{sub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet


snippet ssub "Subsubsection" b
\subsubsection{${1:subsubsection name}} \label{ssub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet pg "Paragraph" b
\paragraph*{${1:paragraph name}}%
$0
endsnippet

snippet subp "Subparagraph" b
\subparagraph{${1:subparagraph name}}%
\label{par:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet pac "Package" b
\usepackage`!p snip.rv='[' if t[1] else ""`${1:options}`!p snip.rv = ']' if t[1] else ""`{${2:package}}$0
endsnippet

############## Labels ##########################

snippet le "label eq"
\label{eq:$1} $0
endsnippet

snippet la "label"
\label{$1} $0
endsnippet

snippet ref "ref"
\ref{$1} $0
endsnippet

snippet re "ref eq"
\autoref{eq:$1} $0
endsnippet

snippet rs "ref section"
\autoref{sec:$1} $0
endsnippet

snippet rf "ref figure"
\autoref{fig:$1} $0
endsnippet

snippet tc "text color"
\textcolor{${1:red}}{${2:${VISUAL}}} 
endsnippet

######################## tikz ########################
snippet center "center env" b
\begin{center}
	$0
\end{center}
endsnippet

snippet tikz "tikz env" b
\begin{tikzpicture}
	$0
\end{tikzpicture}
endsnippet

snippet tikzr "tikz env with remember and overlay" b
\begin{tikzpicture}[overlay, remember picture]
	$0
\end{tikzpicture}
endsnippet

snippet scope "scope env" b
\begin{scope}[$1]
	$0
\end{scope}
endsnippet

snippet calc "calculate coordinate"
($(${1:${VISUAL}})$)
endsnippet

snippet draw "draw"
\draw[$1] ($2) -- ($3); $4
endsnippet

snippet node "node in path"
node[$1] ($2) {$3} $4
endsnippet

snippet Node "single node"
\node[$1] at ($2) ($3) {$4}; $0
endsnippet

snippet ue "ü" i
ü
endsnippet

snippet oe "ö" i
ö
endsnippet

snippet ae "ä" i
ä
endsnippet

snippet Ue "Ü" i
Ü
endsnippet

snippet Oe "Ö" i
Ö
endsnippet

snippet Ae "Ä" i
Ä
endsnippet

###################### Beamer ##############################

snippet frame "frame" b
\begin{frame}{${1:frametitle}}
	${2:${VISUAL}}
\end{frame}
endsnippet

snippet cls "columns" b
\begin{columns}[onlytextwidth]
  \column{${1:0.5}\textwidth}
    $0
\end{columns}
endsnippet
	
snippet col "column" b
  \column{${1:0.5}\textwidth}
    $0
endsnippet
	

# vim:ft=snippets:
